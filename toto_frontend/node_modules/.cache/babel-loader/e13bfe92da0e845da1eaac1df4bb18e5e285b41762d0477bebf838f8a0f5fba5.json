{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents new\\\\Coding_Projects\\\\Toto\\\\TOTO-Project\\\\toto_frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfitabilityTable = ({\n  data\n}) => {\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profitability-table\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Prize Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Share Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Share Prize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [data.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"3\",\n            className: \"total-shares\",\n            children: [\"Total Share Count: \", entry.totalShareCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)), [1, 2, 3, 4, 5, 6, 7].map(group => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"Prize Group \", group]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data[0].shareCounts[`shareCount${group}`] !== undefined ? data[0].shareCounts[`shareCount${group}`] : 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data[0].sharePrizes[`sharePrize${group}`] !== undefined ? `$${data[0].sharePrizes[`sharePrize${group}`].toLocaleString()}` : 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)]\n        }, group, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = ProfitabilityTable;\nexport default ProfitabilityTable;\nvar _c;\n$RefreshReg$(_c, \"ProfitabilityTable\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProfitabilityTable","data","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","entry","index","colSpan","totalShareCount","group","shareCounts","undefined","sharePrizes","toLocaleString","_c","$RefreshReg$"],"sources":["D:/Documents new/Coding_Projects/Toto/TOTO-Project/toto_frontend/src/App.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst ProfitabilityTable = ({ data }) => {\r\n  if (!data || data.length === 0) {\r\n    return <p>No data available</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"profitability-table\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Prize Group</th>\r\n            <th>Share Count</th>\r\n            <th>Share Prize</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((entry, index) => (\r\n            <tr key={index}>\r\n              <td colSpan=\"3\" className=\"total-shares\">\r\n                Total Share Count: {entry.totalShareCount}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n          {[1, 2, 3, 4, 5, 6, 7].map((group) => (\r\n            <tr key={group}>\r\n              <td>Prize Group {group}</td>\r\n              <td>\r\n                {data[0].shareCounts[`shareCount${group}`] !== undefined \r\n                  ? data[0].shareCounts[`shareCount${group}`] \r\n                  : 'N/A'}\r\n              </td>\r\n              <td>\r\n                {data[0].sharePrizes[`sharePrize${group}`] !== undefined \r\n                  ? `$${data[0].sharePrizes[`sharePrize${group}`].toLocaleString()}` \r\n                  : 'N/A'}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfitabilityTable;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACvC,IAAI,CAACA,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;IAC9B,oBAAOH,OAAA;MAAAI,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACjC;EAEA,oBACER,OAAA;IAAKS,SAAS,EAAC,qBAAqB;IAAAL,QAAA,eAClCJ,OAAA;MAAAI,QAAA,gBACEJ,OAAA;QAAAI,QAAA,eACEJ,OAAA;UAAAI,QAAA,gBACEJ,OAAA;YAAAI,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBR,OAAA;YAAAI,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBR,OAAA;YAAAI,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRR,OAAA;QAAAI,QAAA,GACGF,IAAI,CAACQ,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrBZ,OAAA;UAAAI,QAAA,eACEJ,OAAA;YAAIa,OAAO,EAAC,GAAG;YAACJ,SAAS,EAAC,cAAc;YAAAL,QAAA,GAAC,qBACpB,EAACO,KAAK,CAACG,eAAe;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC;QAAC,GAHEI,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CACL,CAAC,EACD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACE,GAAG,CAAEK,KAAK,iBAC/Bf,OAAA;UAAAI,QAAA,gBACEJ,OAAA;YAAAI,QAAA,GAAI,cAAY,EAACW,KAAK;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5BR,OAAA;YAAAI,QAAA,EACGF,IAAI,CAAC,CAAC,CAAC,CAACc,WAAW,CAAC,aAAaD,KAAK,EAAE,CAAC,KAAKE,SAAS,GACpDf,IAAI,CAAC,CAAC,CAAC,CAACc,WAAW,CAAC,aAAaD,KAAK,EAAE,CAAC,GACzC;UAAK;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,eACLR,OAAA;YAAAI,QAAA,EACGF,IAAI,CAAC,CAAC,CAAC,CAACgB,WAAW,CAAC,aAAaH,KAAK,EAAE,CAAC,KAAKE,SAAS,GACpD,IAAIf,IAAI,CAAC,CAAC,CAAC,CAACgB,WAAW,CAAC,aAAaH,KAAK,EAAE,CAAC,CAACI,cAAc,CAAC,CAAC,EAAE,GAChE;UAAK;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC;QAAA,GAXEO,KAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYV,CACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACY,EAAA,GA1CInB,kBAAkB;AA4CxB,eAAeA,kBAAkB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}